I"Mg<p>HTTP URL 报文　链接　tcp</p>

<h1 id="http超文本传输协议">HTTP(超文本传输协议)</h1>

<ul>
  <li>我们在浏览器输入网址到看到网页，这期间发生了什么？</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>浏览器---URL------&gt;服务器主机名----IP----端口号----&gt;TCP连接-------&gt;HTTP请求报文---------&gt;HTTP响应报文-------关闭连接-------&gt;浏览器显示数据
</code></pre></div></div>

<ul>
  <li>URL中包含了哪些信息?</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>方案-用户名-密码-主机-端口-路径-参数-查询-片段
</code></pre></div></div>

<ul>
  <li>HTTP请求方法有哪些？GET与POST有何区别?</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET			从服务器向客户端发送命名资源
PUT			将来自客户端的数据存储到一个命名的服务器资源中去
DELETE		从服务器中删除命名资源
POST		将客户端数据发送到一个服务器网关应用程序
HEAD		仅发送命名资源响应中的 HTTP 首部

GET 		方法负责从服务器获取一个文档
POST 		方法会向服务器发送需要处理的数据
OPTIONS 	方法用于确定 Web服务器的一般功能，或者 Web 服务器处理特定资源的能力

</code></pre></div></div>

<ul>
  <li>HTTP状态码常用的有哪些，分别是什么含义?</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>200			OK。文档正确返回
302			Redirect（重定向）。到其他地方去获取资源
404			Not Found（没找到）。无法找到这个资源

100 ～ 101	信息提示
200 ～ 206	成功
300 ～ 305	重定向
400 ～ 415	客户端错误
500 ～ 505	服务器错误

</code></pre></div></div>

<ul>
  <li>HTTP请求报文格式是什么?</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>起始行+首部+主体
</code></pre></div></div>

<ul>
  <li>HTTP响应报文格式是什么?</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>起始行+首部+主体
</code></pre></div></div>

<ul>
  <li>用于Web浏览器和Web服务器和Web应用程序相互通信</li>
  <li>1-4章  Web的基础构件与HTTP的核心技术</li>
  <li>1:HTTP</li>
  <li>2:URL(统一资源定位符)
    <ul>
      <li>统一资源名(URN)的演变过程</li>
    </ul>
  </li>
  <li>3:HTTP报文是如何传送Web内容的</li>
  <li>4:HTTP连接管理过程中一些容易误解的规则和行为</li>
</ul>

<h2 id="http如何传输web流量">HTTP如何传输Web流量</h2>

<ul>
  <li>Web 内容(数据)都是存储在 Web 服务器上的</li>
  <li>Web 服务器( HTTP 服务器)所使用的是 HTTP 协议</li>
  <li>HTTP 客户端 –&gt; HTTP请求—-&gt;Web 服务器—–&gt;数据—-&gt;HTTP 客户端</li>
  <li></li>
  <li>Web 服务器是 Web 资源(文件)的宿主</li>
  <li>Web 资源 是 Web 内容的源头(即提供Web内容的东西)
    <ul>
      <li>包括<code class="highlighter-rouge">静态文件</code>(文本文件、图片、文档…)</li>
      <li><code class="highlighter-rouge">动态内容</code>  软件程序</li>
    </ul>
  </li>
  <li>Web 服务器会为所有 HTTP 对象数据加上
    <ul>
      <li><code class="highlighter-rouge">MIME 类型</code> 它来描述并标记多媒体内容   (即数据类型  用于转化输出)</li>
      <li>text/html类型</li>
      <li>image/jpeg类型</li>
    </ul>
  </li>
</ul>

<h2 id="url">URL</h2>

<ul>
  <li>Web服务器资源的名字   用于定位信息资源</li>
  <li>两种形式
    <ul>
      <li>URL  统一资源定位符   (协议+服务器+本地资源)</li>
      <li>对于<code class="highlighter-rouge">http://www.joes-hardware.com/specials/saw-blade.gif</code>
        <ul>
          <li><code class="highlighter-rouge">使用HTTP协议 进入www.joes-hardware.com 获取名为/specials/saw-blade.gif的资源</code></li>
        </ul>
      </li>
      <li>URN    统一资源名</li>
    </ul>
  </li>
</ul>

<h2 id="事务">事务</h2>

<ul>
  <li><code class="highlighter-rouge">HTTP 报文</code>               传输内容的格式化数据块</li>
  <li>客户端–&gt; 包含命令和URI的HTTP请求报文——因特网—-&gt;服务器
    <ul>
      <li>—-&gt;包含事务结果的HTTP响应报文——因特网—–&gt;客户端</li>
    </ul>
  </li>
  <li>完成一项任务时, 事务时多个的</li>
</ul>

<h2 id="方法">方法</h2>

<ul>
  <li>五种常见的HTTP 方法</li>
</ul>

<table>
  <thead>
    <tr>
      <th>HTTP方法</th>
      <th>描　　述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>GET</td>
      <td>从服务器向客户端发送命名资源</td>
    </tr>
    <tr>
      <td>PUT</td>
      <td>将来自客户端的数据存储到一个命名的服务器资源中去</td>
    </tr>
    <tr>
      <td>DELETE</td>
      <td>从服务器中删除命名资源</td>
    </tr>
    <tr>
      <td>POST</td>
      <td>将客户端数据发送到一个服务器网关应用程序</td>
    </tr>
    <tr>
      <td>HEAD</td>
      <td>仅发送命名资源响应中的 HTTP 首部</td>
    </tr>
  </tbody>
</table>

<h2 id="状态码">状态码</h2>

<ul>
  <li>
    <p>报文返回是携带的<code class="highlighter-rouge">三位数字的代码</code></p>

    <ul>
      <li>告知客户端请求是否成功</li>
      <li>或者是否需要采取其他动作</li>
      <li>使用时会加带 <code class="highlighter-rouge">文本短语</code> 进行描述
        <ul>
          <li>200 OK</li>
          <li>200 Success</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>HTTP状态码</th>
      <th>描　　述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td>OK。文档正确返回</td>
    </tr>
    <tr>
      <td>302</td>
      <td>Redirect（重定向）。到其他地方去获取资源</td>
    </tr>
    <tr>
      <td>404</td>
      <td>Not Found（没找到）。无法找到这个资源</td>
    </tr>
  </tbody>
</table>

<h2 id="web页面中可以包含多个对象">Web页面中可以包含多个对象</h2>

<ul>
  <li>多个HTTP事务访问多个资源形成个自独立的单个事务  完成一项任务</li>
</ul>

<h2 id="报文">报文</h2>

<ul>
  <li>纯文本 字符串</li>
  <li>请求报文</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET /test/hi-there.txt HTTP/1.0                   起始行

Accept: text/*                                    首部
Accept-Language: en,fr                            首部


</code></pre></div></div>

<ul>
  <li>响应报文</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.0 200 OK                                   起始行
(协议版本号)
Content-type: text/plain                          首部   (数据类型)
Content-length: 19                                首部   (长度)

Hi! I’m a message!                                主体
</code></pre></div></div>

<ul>
  <li>起始行    (请求————响应)
    <ul>
      <li>做什么                                                          做的怎么样</li>
    </ul>
  </li>
  <li>首部字段 (&gt;=0   以空行结束首部)
    <ul>
      <li><code class="highlighter-rouge">名字:值</code>                                                       <code class="highlighter-rouge">名字:值</code></li>
    </ul>
  </li>
  <li>主体
    <ul>
      <li>数据                                                              数据</li>
    </ul>
  </li>
  <li>其中起始行和首部都是<code class="highlighter-rouge">结构化</code>的文本形式</li>
  <li>主体可以是任意的二进制数据包括文本</li>
</ul>

<h2 id="连接">连接</h2>

<ul>
  <li>TCP/IP(因特网传输协议)</li>
  <li>无差错的数据传输</li>
  <li>按序传输（数据总是会按照发送的顺序到达）</li>
  <li>未分段的数据流（可以在任意时刻以任意尺寸将数据发送出去）</li>
  <li>TCP/IP 连接
    <ul>
      <li>服务器的 <code class="highlighter-rouge">IP 地址</code>+特定软件相关<code class="highlighter-rouge">端口号</code>(默认80)</li>
      <li>从URL中来获取<code class="highlighter-rouge">http://207.200.83.29:80/index.html</code></li>
      <li><code class="highlighter-rouge">域名-------&gt;DNS(域名服务)---------&gt;IP</code></li>
    </ul>
  </li>
  <li>浏览器—URL——&gt;服务器主机名—-IP—-端口号—-&gt;TCP连接——-&gt;HTTP请求报文———&gt;HTTP响应报文——-关闭连接——-&gt;浏览器显示数据</li>
</ul>

<h2 id="telnet程序">Telnet程序</h2>

<ul>
  <li>与Web 服务器通信</li>
</ul>

<h2 id="协议版本">协议版本</h2>

<table>
  <thead>
    <tr>
      <th>协议版本</th>
      <th>描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>HTTP/0.9</td>
      <td> </td>
    </tr>
    <tr>
      <td>HTTP/1.0</td>
      <td> </td>
    </tr>
    <tr>
      <td>HTTP/1.0+</td>
      <td> </td>
    </tr>
    <tr>
      <td>HTTP/1.1</td>
      <td> </td>
    </tr>
    <tr>
      <td>HTTP-NG(HTTP/2.0)</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h2 id="web的结构组件">Web的结构组件</h2>

<h3 id="代理">代理</h3>

<ul>
  <li>位于客户端和服务器之间的 HTTP 中间实体</li>
  <li>接收客户端的请求(可对请求修改操作)—————————转发给服务器</li>
  <li>中间做过滤作用</li>
  <li>HTTP代理服务器</li>
</ul>

<h3 id="缓存">缓存</h3>

<ul>
  <li>HTTP 的仓库，使常用页面的副本可以保存在离客户端更近的地方</li>
  <li>Web缓存或代理缓存, 特殊的HTTP代理缓存</li>
  <li>将访问同一文本缓存下来,下次访问提高性能</li>
</ul>

<h3 id="网关">网关</h3>

<ul>
  <li>连接其他应用程序的特殊 Web 服务器</li>
  <li>近似源端服务器</li>
</ul>

<h3 id="隧道">隧道</h3>

<ul>
  <li>对 HTTP 通信报文进行盲转发的特殊代理</li>
  <li>数据不可见</li>
  <li>SSL加密</li>
</ul>

<h3 id="agent代理如web浏览器">Agent代理(如:Web浏览器)</h3>

<ul>
  <li>发起自动 HTTP 请求的半智能 Web 客户端</li>
  <li>可以在无人监视的情况下,发布 HTTP 事务并获取内容</li>
  <li>比如“网络蜘蛛” 或者 “Web 机器人” ,自动获取链接文档的程序</li>
</ul>

<h1 id="url-1">URL</h1>

<ul>
  <li>协议(方案)+服务器(主机)+资源路径</li>
  <li>方案:
    <ul>
      <li>HTTP协议        <code class="highlighter-rouge">http://www.joes-hardware.com/seasonal/index-fall.html</code></li>
      <li>E-mail账户      <code class="highlighter-rouge">mailto:president@whitehouse.gov</code></li>
      <li>FTP协议          <code class="highlighter-rouge">ftp://ftp.lots-o-books.com/pub/complete-price-list.xls</code></li>
      <li>流视频服         <code class="highlighter-rouge">rtsp://www.joes-hardware.com:554/interview/cto_video</code></li>
    </ul>
  </li>
  <li>语法
    <ul>
      <li><code class="highlighter-rouge">&lt;scheme&gt;://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;path&gt;;&lt;params&gt;?&lt;query&gt;#&lt;frag&gt;</code></li>
      <li>URL 最重要的 3 个部分是方案（scheme）、主机（host）和路径（path）</li>
      <li>方案-用户名-密码-主机-端口-路径-参数-查询-片段</li>
    </ul>
  </li>
  <li>URL快捷方式
    <ul>
      <li>相对路径</li>
    </ul>
  </li>
  <li>自动扩展URL
    <ul>
      <li>提示</li>
    </ul>
  </li>
</ul>

<h2 id="编码机制">编码机制</h2>

<table>
  <thead>
    <tr>
      <th>字　　符</th>
      <th>ASCII码</th>
      <th>示例URL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>~</td>
      <td>126(0x7E)</td>
      <td>http://www.joes-hardware.com/%7Ejoe</td>
    </tr>
    <tr>
      <td>空格</td>
      <td>32(0x20)</td>
      <td>http://www.joes-hardware.com/more%20tools.html</td>
    </tr>
    <tr>
      <td>%</td>
      <td>37(0x25)</td>
      <td>http://www.joes-hardware.com/100%25satisfaction.html</td>
    </tr>
  </tbody>
</table>

<h2 id="保留及受限字符">保留及受限字符</h2>

<table>
  <thead>
    <tr>
      <th>字　　符</th>
      <th>保留/受限</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>%</td>
      <td>保留作为编码字符的转义标志</td>
    </tr>
    <tr>
      <td>/</td>
      <td>保留作为路径组件中分隔路径段的定界符</td>
    </tr>
    <tr>
      <td>.</td>
      <td>保留在路径组件中使用</td>
    </tr>
    <tr>
      <td>..</td>
      <td>保留在路径组件中使用</td>
    </tr>
    <tr>
      <td>#</td>
      <td>保留作为分段定界符使用</td>
    </tr>
    <tr>
      <td>?</td>
      <td>保留作为查询字符串定界符使用</td>
    </tr>
    <tr>
      <td>;</td>
      <td>保留作为参数定界符使用</td>
    </tr>
    <tr>
      <td>:</td>
      <td>保留作为方案、用户 / 口令，以及主机 / 端口组件的定界符使用</td>
    </tr>
    <tr>
      <td>$ , +</td>
      <td>保留</td>
    </tr>
    <tr>
      <td>@ &amp; =</td>
      <td>在某些方案的上下文中有特殊的含义，保留</td>
    </tr>
    <tr>
      <td>{} | \ ^ ~ [] ‘</td>
      <td>由于各种传输 Agent 代理，比如各种网关的不安全处理，使用受限</td>
    </tr>
    <tr>
      <td>&lt; &gt; “</td>
      <td>不安全；这些字符在 URL 范围之外通常是有意义的，比如在文档中对 URL 自身进行定界（比如 http://www.joes-hardware.com），所以应该对其进行编码</td>
    </tr>
    <tr>
      <td>0x00-0x1F, 0x7F</td>
      <td>受限，这些十六进制范围内的字符都在 US-ASCII 字符集的不可打印区间内</td>
    </tr>
    <tr>
      <td>&gt;0x7F</td>
      <td>受限，十六进制值在此范围内的字符都不在 US-ASCII 字符集的 7 比特范围内</td>
    </tr>
  </tbody>
</table>

<h2 id="方案">方案</h2>

<ul>
  <li>http</li>
  <li>https</li>
  <li>mailto</li>
  <li>ftp</li>
  <li>rtsp，rtspu</li>
  <li>file</li>
  <li>news</li>
  <li>telnet</li>
</ul>

<h1 id="报文-1">报文</h1>

<ul>
  <li>请求报文</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;method&gt; &lt;request-URL&gt; &lt;version&gt;
&lt;headers&gt;
  
&lt;entity-body&gt;
</code></pre></div></div>

<ul>
  <li>响应报文</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;version&gt; &lt;status&gt; &lt;reason-phrase&gt;
&lt;headers&gt;

&lt;entity-body&gt;
</code></pre></div></div>

<ul>
  <li>方法（method）</li>
  <li>请求URL（request-URL）</li>
  <li>版本（version）</li>
  <li>状态码（status-code）</li>
  <li>原因短语（reason-phrase）</li>
  <li>首部（header）</li>
  <li>实体的主体部分（entity-body）</li>
</ul>

<h2 id="http方法">HTTP方法</h2>

<table>
  <thead>
    <tr>
      <th>方　　法</th>
      <th>描　　述</th>
      <th>是否包含主体</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>GET</td>
      <td>从服务器获取一份文档</td>
      <td>否</td>
    </tr>
    <tr>
      <td>HEAD</td>
      <td>只从服务器获取文档的首部</td>
      <td>否</td>
    </tr>
    <tr>
      <td>POST</td>
      <td>向服务器发送需要处理的数据</td>
      <td>是</td>
    </tr>
    <tr>
      <td>PUT</td>
      <td>将请求的主体部分存储在服务器上</td>
      <td>是</td>
    </tr>
    <tr>
      <td>TRACE</td>
      <td>对可能经过代理服务器传送到服务器上去的报文进行追踪</td>
      <td>否</td>
    </tr>
    <tr>
      <td>OPTIONS</td>
      <td>决定可以在服务器上执行哪些方法</td>
      <td>否</td>
    </tr>
    <tr>
      <td>DELETE</td>
      <td>从服务器上删除一份文档</td>
      <td>否</td>
    </tr>
  </tbody>
</table>

<h2 id="状态码-1">状态码</h2>

<table>
  <thead>
    <tr>
      <th>整体范围</th>
      <th>已定义范围</th>
      <th>分　　类</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>100 ～ 199</td>
      <td>100 ～ 101</td>
      <td>信息提示</td>
    </tr>
    <tr>
      <td>200 ～ 299</td>
      <td>200 ～ 206</td>
      <td>成功</td>
    </tr>
    <tr>
      <td>300 ～ 399</td>
      <td>300 ～ 305</td>
      <td>重定向</td>
    </tr>
    <tr>
      <td>400 ～ 499</td>
      <td>400 ～ 415</td>
      <td>客户端错误</td>
    </tr>
    <tr>
      <td>500 ～ 599</td>
      <td>500 ～ 505</td>
      <td>服务器错误</td>
    </tr>
  </tbody>
</table>

<h3 id="常见状态码">常见状态码</h3>

<table>
  <thead>
    <tr>
      <th>状　态　码</th>
      <th>原因短语</th>
      <th>含　　义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td>OK</td>
      <td>成功。请求的所有数据都在响应主体中</td>
    </tr>
    <tr>
      <td>401</td>
      <td>Unauthorized（未授权）</td>
      <td>需要输入用户名和密码</td>
    </tr>
    <tr>
      <td>404</td>
      <td>Not Found（未找到）</td>
      <td>服务器无法找到所请求 URL 对应的资源</td>
    </tr>
  </tbody>
</table>

<h2 id="首部">首部</h2>

<table>
  <thead>
    <tr>
      <th>首部实例</th>
      <th>描　　述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Date:Tue,3Oct 1997 02:16:03 GMT</td>
      <td>服务器产生响应的日期</td>
    </tr>
    <tr>
      <td>Content-length:15040</td>
      <td>实体的主体部分包含了 15 040 字节的数据</td>
    </tr>
    <tr>
      <td>Content-type:image/gif</td>
      <td>实体的主体部分是一个 GIF 图片</td>
    </tr>
    <tr>
      <td>Accept: image/gif, image/jpeg, text/html</td>
      <td>客户端可以接收 GIF 图片和 JPEG 图片以及 HTM</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>分隔用空格   跨行用空格/Tab</li>
</ul>

<h1 id="方法-1">方法</h1>

<ul>
  <li>安全方法
    <ul>
      <li>GET</li>
      <li>HEAD</li>
    </ul>
  </li>
  <li>GET
    <ul>
      <li>请求服务器发送某个资源</li>
    </ul>
  </li>
  <li>HEAD
    <ul>
      <li>请求服务器发送某个资源</li>
      <li>服务器在响应中只返回首部。不会返回实
体的主体部分</li>
    </ul>
  </li>
  <li>PUT
    <ul>
      <li>向服务器写入文档</li>
    </ul>
  </li>
  <li>POST
    <ul>
      <li>向服务器输入数据的</li>
      <li>通常指表单数据</li>
    </ul>
  </li>
  <li>TRACE
    <ul>
      <li>客户端发起一个请求</li>
      <li>客户端可以看到请求修改的内容</li>
    </ul>
  </li>
  <li>OPTIONS
    <ul>
      <li>请求 Web 服务器告知其支持的各种功能</li>
      <li>比如 询问服务器通常支持 哪些方法，或者对某些特殊资源支持哪些方法</li>
    </ul>
  </li>
  <li>DELETE
    <ul>
      <li>请服务器删除请求 URL 所指定的资源</li>
    </ul>
  </li>
</ul>

<h2 id="扩展方法">扩展方法</h2>

<table>
  <thead>
    <tr>
      <th>方　　法</th>
      <th>描　　述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>LOCK</td>
      <td>允许用户“锁定”资源——比如，可以在编辑某个资源的时候将其锁定，防别人同时对其进行修改</td>
    </tr>
    <tr>
      <td>MKCOL</td>
      <td>允许用户创建资源</td>
    </tr>
    <tr>
      <td>COPY</td>
      <td>便于在服务器上复制资源</td>
    </tr>
    <tr>
      <td>MOVE</td>
      <td>在服务器上移动资源</td>
    </tr>
  </tbody>
</table>

<h1 id="首部-1">首部</h1>

<table>
  <thead>
    <tr>
      <th>首　　部</th>
      <th>描　　述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>信息性首部</td>
      <td> </td>
    </tr>
    <tr>
      <td>Connection</td>
      <td>允许客户端和服务器指定与请求 / 响应连接有关的选项</td>
    </tr>
    <tr>
      <td>Date</td>
      <td>提供日期和时间标志，说明报文是什么时间创建的</td>
    </tr>
    <tr>
      <td>MIME-Version</td>
      <td>给出了发送端使用的 MIME 版本</td>
    </tr>
    <tr>
      <td>Trailer</td>
      <td>如果报文采用了分块传输编码（chunked transfer encoding）方式，就可</td>
    </tr>
    <tr>
      <td>以用这个首部列出位于报文拖挂（trailer）部分的首部集合</td>
      <td> </td>
    </tr>
    <tr>
      <td>Transfer-Encoding</td>
      <td>告知接收端为了保证报文的可靠传输，对报文采用了什么编码方式</td>
    </tr>
    <tr>
      <td>Update</td>
      <td>给出了发送端可能想要“升级”使用的新版本或协议</td>
    </tr>
    <tr>
      <td>Via</td>
      <td>显示了报文经过的中间节点（代理、网关）</td>
    </tr>
    <tr>
      <td>缓存首部</td>
      <td> </td>
    </tr>
    <tr>
      <td>Cache-Control</td>
      <td>用于随报文传送缓存指示</td>
    </tr>
    <tr>
      <td>Pragma</td>
      <td>另一种随报文传送指示的方式，但并不专用于缓存</td>
    </tr>
    <tr>
      <td>请求首部</td>
      <td> </td>
    </tr>
    <tr>
      <td>Client-IP</td>
      <td>提供了运行客户端的机器的 IP 地址</td>
    </tr>
    <tr>
      <td>From</td>
      <td>提供了客户端用户的 E-mail 地址</td>
    </tr>
    <tr>
      <td>Host</td>
      <td>给出了接收请求的服务器的主机名和端口号</td>
    </tr>
    <tr>
      <td>Referer</td>
      <td>提供了包含当前请求 URI 的文档的 URL</td>
    </tr>
    <tr>
      <td>UA-Color</td>
      <td>提供了与客户端显示器的显示颜色有关的信息</td>
    </tr>
    <tr>
      <td>UA-CPU</td>
      <td>给出了客户端 CPU 的类型或制造商</td>
    </tr>
    <tr>
      <td>UA-Disp</td>
      <td>提供了与客户端显示器（屏幕）能力有关的信息</td>
    </tr>
    <tr>
      <td>UA-OS</td>
      <td>给出了运行在客户端机器上的操作系统名称及版本</td>
    </tr>
    <tr>
      <td>UA-Pixels</td>
      <td>提供了客户端显示器的像素信息</td>
    </tr>
    <tr>
      <td>User-Agent</td>
      <td>将发起请求的应用程序名称告知服务器</td>
    </tr>
    <tr>
      <td>Accept 首部</td>
      <td> </td>
    </tr>
    <tr>
      <td>Accept</td>
      <td>告诉服务器能够发送哪些媒体类型</td>
    </tr>
    <tr>
      <td>Accept-Charset</td>
      <td>告诉服务器能够发送哪些字符集</td>
    </tr>
    <tr>
      <td>Accept-Encoding</td>
      <td>告诉服务器能够发送哪些编码方式</td>
    </tr>
    <tr>
      <td>Accept-Language</td>
      <td>告诉服务器能够发送哪些语言</td>
    </tr>
    <tr>
      <td>TE</td>
      <td>告诉服务器可以使用哪些扩展传输编码</td>
    </tr>
    <tr>
      <td>条件请求首部</td>
      <td> </td>
    </tr>
    <tr>
      <td>Expect</td>
      <td>允许客户端列出某请求所要求的服务器行为</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="连接管理tcp">连接管理TCP</h1>

<ul>
  <li>
    <p>URL—-域名(主机名)解析(DNS)——IP——端口——建立连接——–请求报文——-响应报文—–关闭连接</p>
  </li>
  <li>
    <p>常见套接字接口函数</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>套接字API调用</th>
      <th>描　　述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>s = socket(<parameters>)</parameters></td>
      <td>创建一个新的、未命名、未关联的套接字</td>
    </tr>
    <tr>
      <td>bind(s,&lt;local IP:port</td>
      <td>向套接字赋一个本地端口号和接口</td>
    </tr>
    <tr>
      <td>connect(s, <remote IP:port="">)</remote></td>
      <td>创建一条连接本地套接字与远程主机及端口的连接</td>
    </tr>
    <tr>
      <td>listen(s,…)</td>
      <td>标识一个本地套接字，使其可以合法接受连接</td>
    </tr>
    <tr>
      <td>s2 = accept(s)</td>
      <td>等待某人建立一条到本地端口的连接</td>
    </tr>
    <tr>
      <td>n = read(s, buffer, n)</td>
      <td>尝试从套接字向缓冲区读取n 个字节</td>
    </tr>
    <tr>
      <td>n = write(s, buffer, n)</td>
      <td>尝试从缓冲区中向套接字写入n 个字节</td>
    </tr>
    <tr>
      <td>close(s)</td>
      <td>完全关闭 TCP 连接</td>
    </tr>
    <tr>
      <td>shutdown(s,<side>)</side></td>
      <td>只关闭 TCP 连接的输入或输出端</td>
    </tr>
    <tr>
      <td>getsockopt(s,…</td>
      <td>读取某个内部套接字配置选项的值</td>
    </tr>
    <tr>
      <td>setsockopt(s,…)</td>
      <td>修改某个内部套接字配置选项的值</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>HTTP 事务的时延的原因
    <ul>
      <li>(1) 客户端首先需要根据 URI 确定 Web 服务器的 IP 地址和端口号。如果最近没有对
URI 中的主机名进行访问，通过 DNS 解析系统将 URI 中的主机名转换成一个 IP
地址可能要花费数十秒的时间</li>
      <li>(2) 接下来，客户端会向服务器发送一条 TCP 连接请求，并等待服务器回送一个请
求接受应答。每条新的 TCP 连接都会有连接建立时延。这个值通常最多只有一
两秒钟，但如果有数百个 HTTP 事务的话，这个值会快速地叠加上去</li>
      <li>(3) 一旦连接建立起来了，客户端就会通过新建立的 TCP 管道来发送 HTTP 请求。
  数据到达时，Web 服务器会从 TCP 连接中读取请求报文，并对请求进行处理因特网传输请求报文，以及服务器处理请求报文都需要时间</li>
      <li>(4) 然后，Web 服务器会回送 HTTP 响应，这也需要花费时间</li>
    </ul>
  </li>
  <li>各种连接方式</li>
  <li>关闭情况</li>
</ul>
:ET